" ~/.vimrc
"
" @author Jack Makiyama
"         based on Augusto Pascutti warwick, Nelson Senna sweethome and http://vim-bootstrap.com

"" NeoBundle core
"
if has('vim_starting')
  set nocompatible               " Be iMproved

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

let neobundle_readme=expand('~/.vim/bundle/neobundle.vim/README.md')

if !filereadable(neobundle_readme)
  echo "Installing NeoBundle..."
  echo ""
  silent !mkdir -p ~/.vim/bundle
  silent !git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

"" NeoBundle install packages
"
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'nelsonsar/phpclassexplorer'
NeoBundle 'shawncplus/phpcomplete.vim'
NeoBundle 'edkolev/tmuxline.vim'
NeoBundle 'bling/vim-airline'
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'elzr/vim-json'
NeoBundle 'jistr/vim-nerdtree-tabs'
NeoBundle 'evidens/vim-twig'
NeoBundle 'scrooloose/nerdcommenter'
NeoBundle 'terryma/vim-multiple-cursors'

" Include user's extra bundle
"
if filereadable(expand("~/.vimrc.local.bundles"))
  source ~/.vimrc.local.bundles
endif

call neobundle#end()

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

" Globals
"
filetype indent plugin on
syn on
set number          " show line numbers (gutter-like)
set smartindent
set ts=4            " tab stop
set shiftwidth=4
set et              " expand tabs
retab               " converts existing tabs
set ruler           " shows ruler
set cursorline      " highlugh current line
set hlsearch

filetype off
filetype indent on

" Airline
"
set laststatus=2
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

" Color scheme options
"
set background=dark
set t_Co=256
colorscheme solarized

" NERDTree
"
" autocmd vimenter * NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
let g:NERDTreeChDirMode = 2

" NERDTreeTabs Toggle
"
map <S-n> :NERDTreeTabsToggle<CR>

" NERDCommenter
"
map <C-/> <leader>c <CR>


" phpcomplete
"
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
inoremap <Nul> <C-x><C-o>

" mark trailing whitespaces
"
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" PHPClassExplorer
"
map <C-e> :PHPClassExplorer<CR>x

" Map keys
"
nmap <C-d> mzyyp`z
"map <C-q> :qall<CR>

" GitGutter
"
highlight clear SignColumn

" Column Limit
"
let &colorcolumn="80,".join(range(120,999),",")

" tab navigation like firefox
nnoremap <leader>p :bprevious<CR>
nnoremap <leader>n :bNext<CR>
nnoremap <leader>t :enew<CR>
inoremap <leader>p <Esc>:bprevious<CR>i
inoremap <leader>n <Esc>:bNext<CR>i
inoremap <leader>t <Esc>:enew<CR>

" Setup some default ignores
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/](\.(git|hg|svn)|\_site)$',
    \ 'file': '\v\.(exe|so|dll|class|png|jpg|jpeg)$',
\}

" Use the nearest .git directory as the cwd
" This makes a lot of sense if you are working on a project that is in version
" control. It also supports works with .svn, .hg, .bzr.
let g:ctrlp_working_path_mode = 'r'

" Easy bindings for its various modes
nmap <leader>bb :CtrlPBuffer<cr>
nmap <leader>bm :CtrlPMixed<cr>
nmap <leader>bs :CtrlPMRU<cr>
