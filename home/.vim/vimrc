" ~/.vimrc
"
" @author Jack Makiyama
"         based on Augusto Pascutti warwick, Nelson Senna sweethome and http://vim-bootstrap.com

"" NeoBundle core
"
if has('vim_starting')
  set nocompatible               " Be iMproved

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

let neobundle_readme=expand('~/.vim/bundle/neobundle.vim/README.md')

if !filereadable(neobundle_readme)
  echo "Installing NeoBundle..."
  echo ""
  silent !mkdir -p ~/.vim/bundle
  silent !git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

"" NeoBundle install packages
"
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'nelsonsar/phpclassexplorer'
NeoBundle 'edkolev/tmuxline.vim'
NeoBundle 'bling/vim-airline'
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'elzr/vim-json'
NeoBundle 'evidens/vim-twig'
NeoBundle 'scrooloose/nerdcommenter'
"NeoBundle 'scrooloose/syntastic'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'terryma/vim-multiple-cursors'
NeoBundle 'mattn/emmet-vim'
" NeoBundle 'wakatime/vim-wakatime'
NeoBundle 'StanAngeloff/php.vim'
"NeoBundle 'takac/vim-hardtime'
NeoBundle 'shawncplus/phpcomplete.vim'
"NeoBundle 'phpfmt/vim-phpfmt'
NeoBundle 'captbaritone/better-indent-support-for-php-with-html'
NeoBundle 'tiagofumo/vim-nerdtree-syntax-highlight'
NeoBundle 'ryanoasis/vim-devicons'

" Include user's extra bundle
"
if filereadable(expand("~/.vimrc.local.bundles"))
  source ~/.vimrc.local.bundles
endif

call neobundle#end()

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

" Globals
"
filetype indent plugin on
filetype off
filetype indent on
syn on
set number          " show line numbers (gutter-like)
set smartindent
set ff=unix
set ts=4            " tab stop
set shiftwidth=4
set et              " expand tabs
retab               " converts existing tabs
set ruler           " shows ruler
set cursorline      " highlugh current line
set hlsearch
set backspace=indent,eol,start
set encoding=utf8


" Airline
"
set laststatus=2
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

" Color scheme options
"
set background=dark
set t_Co=256
let g:solarized_termcolors=256
colorscheme solarized

" NERDCommenter
"
map <leader>\ <leader>c <CR>

" NERDTree
"
map <leader>t :NERDTreeToggle<CR>

" mark trailing whitespaces
"
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()
autocmd BufWritePre * :%s/\s\+$//e
autocmd FileType php autocmd BufWritePre * :%s/\t/    /e

" PHPClassExplorer
"
autocmd FileType php map <leader>e :PHPClassExplorer<CR>x

" GitGutteR
"
highlight clear SignColumn

" Column Limit
"
let &colorcolumn="80,".join(range(120,999),",")

" netrw
"
let g:netrw_liststyle=3
let g:netrw_banner=0
map <leader>e :Vex<CR>

" Clear Searches
"
map <leader>/ :noh<CR>

" Syntastic
"
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
let g:syntastic_php_phpcs_args="--standard=PSR2 -n --report=csv"

" Hardtime
"
" let g:hardtime_default_on = 1

" Switch to alternate file
map gn :bn<cr>
map gp :bp<cr>
map gd :bd<cr>

" phpfmt
"let g:phpfmt_on_save = get(g:, 'phpfmt_on_save', 1) " format on save (autocmd)
"let g:phpfmt_php_path = "php"               " Path to PHP
"let g:phpfmt_standard = 'PSR2'
"let g:phpfmt_autosave = 0

" nerdtree-syntax-highlight
"
"let g:NERDTreeDisableFileExtensionHighlight = 1
set guifont=Droid\ Sans\ Mono\ for\ Powerline\ Plus\ Nerd\ File\ Types:h11

